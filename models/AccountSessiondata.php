<?php

namespace app\models;

use DateTime;
use Yii;

/**
 * This is the model class for table "account_sessiondata".
 *
 * @property int $id
 * @property int $uid
 * @property string $st
 * @property string $et
 * @property int $sbt
 * @property string $wcId
 * @property string $sq1
 * @property string $sq2
 * @property string $sq3
 * @property string $eq1
 * @property string $eq2
 * @property string $v
 *
 * @property AccountUser $user
 * @property AccountWheelchair $wheelchair
 */
class AccountSessiondata extends \yii\db\ActiveRecord
{

    public $totalDuration;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'account_sessiondata';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['uid', 'st', 'et', 'sbt', 'wcId', 'sq1', 'sq2', 'sq3', 'eq1', 'eq2', 'v'], 'required'],
            [['uid', 'sbt'], 'integer'],
            [['st', 'v'], 'string', 'max' => 25],
            [['totalDuration'], 'string', 'max' => 25],
            [['et', 'wcId', 'sq1', 'sq2', 'sq3', 'eq1', 'eq2'], 'string', 'max' => 20],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'uid' => Yii::t('app', 'User'),
            'st' => Yii::t('app', 'Session Start'),
            'et' => Yii::t('app', 'Session End'),
            'sbt' => Yii::t('app', 'Sbt'),
            'wcId' => Yii::t('app', 'WheelChair'),
            'sq1' => Yii::t('app', 'Q1'),
            'sq2' => Yii::t('app', 'Q2'),
            'sq3' => Yii::t('app', 'Q3'),
            'eq1' => Yii::t('app', 'End Session Question Res1'),
            'eq2' => Yii::t('app', 'End Session Question Res2'),
            'v' => Yii::t('app', 'Version'),

            'totalDuration' => Yii::t('app', 'Duration'),
            'username' => Yii::t('app', 'User'),
        ];
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(AccountUser::class, ['id' => 'uid']);
    }

    /**
     * Gets query for [[User]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getWheelChair()
    {
        return $this->hasOne(AccountWheelchair::class, ['id' => 'wcId']);
    }


    private function secondsToWords($seconds)
    {
        /*** return value ***/
        $ret = "";
        /*** get the hours ***/
        $hours = intval(intval($seconds) / 3600);
        if($hours > 0)
        {
            $ret .= "$hours hours ";
        }
        /*** get the minutes ***/
        $minutes = bcmod((intval($seconds) / 60),60);
        if($hours > 0 || $minutes > 0)
        {
            $ret .= "$minutes minutes ";
        }

        /*** get the seconds ***/
        $seconds = bcmod(intval($seconds),60);
        $ret .= "$seconds seconds";
        return $ret;
    }

    public function afterFind()
    {
        parent::afterFind(); // TODO: Change the autogenerated stub
        $this->st = $this->st / 1000;
        $this->et = $this->et / 1000;

        $this->totalDuration = $this->secondsToWords($this->et- $this->st);
        $this->st = date('d/m/Y H:i:s', $this->st);
        $this->et = date('d/m/Y H:i:s', $this->et);
    }


}
